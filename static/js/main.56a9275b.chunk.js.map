{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByAlphabet","setState","ALPHABET","sortByLength","LENGTH","reversedList","handleReset","this","goods","visibleGoods","sort","first","second","localeCompare","length","reverse","getReorderedGoods","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA4CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CACZH,SAAUL,EAASS,YARzB,EAYEC,aAAe,WACb,EAAKF,SAAS,CACZH,SAAUL,EAASW,UAdzB,EAkBEC,aAAe,WACb,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBApBzB,EAwBES,YAAc,WACZ,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QA3BzB,4CA+BE,WACE,IACEC,EAIEO,KAJFP,eACAG,EAGEI,KAHFJ,aACAE,EAEEE,KAFFF,aACAC,EACEC,KADFD,YAGF,EAGIC,KAAKX,MAFPC,EADF,EACEA,WACAC,EAFF,EAEEA,SAEIU,EA5EH,SACLA,EADK,GAMJ,IAHCV,EAGF,EAHEA,SACAD,EAEF,EAFEA,WAGIY,EAAY,YAAOD,GAkBzB,OAfAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQd,GACN,KAAKL,EAASS,SACZ,OAAOS,EAAME,cAAcD,GAC7B,KAAKnB,EAASW,OACZ,OAAOO,EAAMG,OAASF,EAAOE,OAC/B,QACE,OAAO,MAITjB,GACFY,EAAaM,UAGRN,EAmDSO,CAAkBtB,EAAiB,CAC/CG,aACAC,aAGF,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYrB,IAAaL,EAASS,WAEpCkB,QAASpB,EALX,iCAUA,wBACEkB,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,WAAYrB,IAAaL,EAASW,SACtCgB,QAASjB,EAJX,4BASA,wBACEe,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,YAAatB,IACjBuB,QAASf,EAJX,sBASEP,IAAaL,EAASM,MAAQF,IAC9B,wBACEqB,KAAK,SACLD,UAAU,4BACVG,QAASd,EAHX,sBASJ,6BACGE,EAAMa,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,eA3FpC,GAAyBC,IAAMC,WC3D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.56a9275b.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  {\n    sortType,\n    isReversed,\n  }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  // eslint-disable-next-line no-console\n  visibleGoods.sort((first, second) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return first.localeCompare(second);\n      case SortType.LENGTH:\n        return first.length - second.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ninterface State {\n  isReversed: boolean;\n  sortType: SortType;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  reversedList = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const {\n      sortByAlphabet,\n      sortByLength,\n      reversedList,\n      handleReset,\n    } = this;\n\n    const {\n      isReversed,\n      sortType,\n    } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, {\n      isReversed,\n      sortType,\n    });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n            onClick={sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-success',\n              { 'is-light': sortType !== SortType.LENGTH })}\n            onClick={sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-warning',\n              { 'is-light': !isReversed })}\n            onClick={reversedList}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n        <ul>\n          {goods.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}